// <auto-generated />
using System;
using FEPPeopleAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FEPPeopleAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240610205951_Add Contract Table2")]
    partial class AddContractTable2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FEPPeopleAPI.Models.Contract", b =>
                {
                    b.Property<int>("ContractID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ContractID"));

                    b.Property<decimal>("DayRate")
                        .HasColumnType("decimal(9, 2)");

                    b.Property<DateOnly>("EndDate")
                        .HasColumnType("date");

                    b.Property<bool>("IsExternal")
                        .HasColumnType("bit");

                    b.Property<int>("OrganisationID")
                        .HasColumnType("int");

                    b.Property<int>("PersonID")
                        .HasColumnType("int");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.HasKey("ContractID");

                    b.ToTable("Contract");
                });

            modelBuilder.Entity("FEPPeopleAPI.Models.ContractDay", b =>
                {
                    b.Property<int>("ContractDayID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ContractDayID"));

                    b.Property<int>("ContractID")
                        .HasColumnType("int");

                    b.Property<int>("DayID")
                        .HasColumnType("int");

                    b.HasKey("ContractDayID");

                    b.HasIndex("ContractID");

                    b.ToTable("ContractDay");
                });

            modelBuilder.Entity("FEPPeopleAPI.Models.Organisation", b =>
                {
                    b.Property<int>("OrganisationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrganisationID"));

                    b.Property<string>("OrganisationName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("OrganisationStatusID")
                        .HasColumnType("int");

                    b.Property<int?>("OrganisationTypeID")
                        .HasColumnType("int");

                    b.HasKey("OrganisationID");

                    b.HasIndex("OrganisationStatusID");

                    b.HasIndex("OrganisationTypeID");

                    b.ToTable("Organisation");
                });

            modelBuilder.Entity("FEPPeopleAPI.Models.OrganisationStatus", b =>
                {
                    b.Property<int>("OrganisationStatusID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrganisationStatusID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.HasKey("OrganisationStatusID");

                    b.ToTable("OrganisationStatus");
                });

            modelBuilder.Entity("FEPPeopleAPI.Models.OrganisationType", b =>
                {
                    b.Property<int>("OrganisationTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrganisationTypeID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.HasKey("OrganisationTypeID");

                    b.ToTable("OrganisationType");
                });

            modelBuilder.Entity("FEPPeopleAPI.Models.Person", b =>
                {
                    b.Property<int>("PersonID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonID"));

                    b.Property<string>("Forename")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("PersonTypeID")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("PersonID");

                    b.HasIndex("PersonTypeID");

                    b.ToTable("Person");
                });

            modelBuilder.Entity("FEPPeopleAPI.Models.PersonAvailability", b =>
                {
                    b.Property<int>("PersonAvailabilityID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonAvailabilityID"));

                    b.Property<int>("DayID")
                        .HasColumnType("int");

                    b.Property<int>("PersonID")
                        .HasColumnType("int");

                    b.HasKey("PersonAvailabilityID");

                    b.HasIndex("PersonID");

                    b.ToTable("PersonAvailability");
                });

            modelBuilder.Entity("FEPPeopleAPI.Models.PersonSpecialism", b =>
                {
                    b.Property<int>("PersonSpecialismID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonSpecialismID"));

                    b.Property<int>("PersonID")
                        .HasColumnType("int");

                    b.Property<int>("SpecialismID")
                        .HasColumnType("int");

                    b.HasKey("PersonSpecialismID");

                    b.HasIndex("PersonID");

                    b.HasIndex("SpecialismID");

                    b.ToTable("PersonSpecialism");
                });

            modelBuilder.Entity("FEPPeopleAPI.Models.PersonType", b =>
                {
                    b.Property<int>("PersonTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonTypeID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.HasKey("PersonTypeID");

                    b.ToTable("PersonType");
                });

            modelBuilder.Entity("FEPPeopleAPI.Models.Specialism", b =>
                {
                    b.Property<int>("SpecialismID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SpecialismID"));

                    b.Property<bool?>("IsEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("SpecialismName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("SpecialismID");

                    b.ToTable("Specialism");
                });

            modelBuilder.Entity("FEPPeopleAPI.Models.ContractDay", b =>
                {
                    b.HasOne("FEPPeopleAPI.Models.Contract", null)
                        .WithMany("ContractDay")
                        .HasForeignKey("ContractID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FEPPeopleAPI.Models.Organisation", b =>
                {
                    b.HasOne("FEPPeopleAPI.Models.OrganisationStatus", "OrganisationStatus")
                        .WithMany()
                        .HasForeignKey("OrganisationStatusID");

                    b.HasOne("FEPPeopleAPI.Models.OrganisationType", "OrganisationType")
                        .WithMany()
                        .HasForeignKey("OrganisationTypeID");

                    b.Navigation("OrganisationStatus");

                    b.Navigation("OrganisationType");
                });

            modelBuilder.Entity("FEPPeopleAPI.Models.Person", b =>
                {
                    b.HasOne("FEPPeopleAPI.Models.PersonType", "PersonType")
                        .WithMany()
                        .HasForeignKey("PersonTypeID");

                    b.Navigation("PersonType");
                });

            modelBuilder.Entity("FEPPeopleAPI.Models.PersonAvailability", b =>
                {
                    b.HasOne("FEPPeopleAPI.Models.Person", null)
                        .WithMany("PersonAvailability")
                        .HasForeignKey("PersonID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FEPPeopleAPI.Models.PersonSpecialism", b =>
                {
                    b.HasOne("FEPPeopleAPI.Models.Person", "Person")
                        .WithMany("PersonSpecialism")
                        .HasForeignKey("PersonID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FEPPeopleAPI.Models.Specialism", "Specialism")
                        .WithMany()
                        .HasForeignKey("SpecialismID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");

                    b.Navigation("Specialism");
                });

            modelBuilder.Entity("FEPPeopleAPI.Models.Contract", b =>
                {
                    b.Navigation("ContractDay");
                });

            modelBuilder.Entity("FEPPeopleAPI.Models.Person", b =>
                {
                    b.Navigation("PersonAvailability");

                    b.Navigation("PersonSpecialism");
                });
#pragma warning restore 612, 618
        }
    }
}
